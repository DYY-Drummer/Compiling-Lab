declare i32 @getch()
declare void @putch(i32)
declare void @putint(i32)
declare i32 @getint()
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)

@ans = dso_local global [50 x i32] zeroinitializer
@sum = dso_local global i32 0
@n = dso_local global i32 0
@row = dso_local global [50 x i32] zeroinitializer
@line1 = dso_local global [50 x i32] zeroinitializer
@line2 = dso_local global [100 x i32] zeroinitializer
define dso_local void@printans() {
	%t1 = load i32, i32* @sum
	%t2 = add i32 %t1, 1
	store i32 %t2, i32* @sum
	%l1 = alloca i32
	store i32 1, i32* %l1
	br label %Label_while_1

Label_while_1:
	%l2 = load i32, i32* %l1
	%l3 = add i32 %l2, 0
	%t3 = load i32, i32* @n
	%l4 = add i32 %t3, 0
	%t4 = icmp sle i32 %l3, %l4
	br i1 %t4,label %Label_and_1, label %Label_or_1

Label_and_1:
	br i1 %t4,label %Label_stmt_1, label %Label_or_1

Label_or_1:
	br label %Label_whileEnd_1

Label_stmt_1:
	%l5 = load i32, i32* %l1
	%t5 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %l5
	%t6 = load i32, i32* %t5
	call void @putint(i32 666)
	call void @putint(i32 %t6)
	br label %Label_if_1_1

Label_if_1_1:
	%l6 = load i32, i32* %l1
	%l7 = add i32 %l6, 0
	%t7 = load i32, i32* @n
	%l8 = add i32 %t7, 0
	%t8 = icmp eq i32 %l7, %l8
	br i1 %t8,label %Label_and_2, label %Label_or_2

Label_and_2:
	br i1 %t8,label %Label_stmt_2, label %Label_or_2

Label_or_2:
	br label %Label_if_2_1

Label_stmt_2:
	call void @putch(i32 10)
	ret void
	br label %Label_cond_1

Label_if_2_1:
	call void @putch(i32 32)
	br label %Label_cond_1

Label_cond_1:
	%t9 = load i32, i32* %l1
	%t10 = add i32 %t9, 1
	store i32 %t10, i32* %l1
	br label %Label_while_1

Label_whileEnd_1:
	ret void
}
define dso_local void@f(i32 %l1) {
	%l2 = alloca i32
	store i32 %l1, i32* %l2
	%l3 = alloca i32
	store i32 1, i32* %l3
	br label %Label_while_2

Label_while_2:
	%l4 = load i32, i32* %l3
	%l5 = add i32 %l4, 0
	%t1 = load i32, i32* @n
	%l6 = add i32 %t1, 0
	%t2 = icmp sle i32 %l5, %l6
	br i1 %t2,label %Label_and_3, label %Label_or_3

Label_and_3:
	br i1 %t2,label %Label_stmt_3, label %Label_or_3

Label_or_3:
	br label %Label_whileEnd_2

Label_stmt_3:
	br label %Label_if_1_2

Label_if_1_2:
	%l7 = load i32, i32* %l3
	%t3 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %l7
	%t4 = load i32, i32* %t3
	%l8 = add i32 %t4, 0
	%l9 = add i32 1, 0
	%t5 = icmp ne i32 %l8, %l9
	br i1 %t5,label %Label_and_4, label %Label_or_4

Label_and_4:
	%t6 = load i32, i32* %l2
	%t7 = load i32, i32* %l3
	%t8 = add i32 %t6, %t7
	%t9 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %t8
	%t10 = load i32, i32* %t9
	%l10 = add i32 %t10, 0
	%l11 = add i32 0, 0
	%t11 = icmp eq i32 %l10, %l11
	br i1 %t11,label %Label_and_5, label %Label_or_4

Label_and_5:
	%t12 = load i32, i32* @n
	%t13 = load i32, i32* %l2
	%t14 = add i32 %t12, %t13
	%t15 = load i32, i32* %l3
	%t16 = sub i32 %t14, %t15
	%t17 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %t16
	%t18 = load i32, i32* %t17
	%l12 = add i32 %t18, 0
	%t19 = icmp ne i32 %l12,0
	br i1 %t19,label %Label_and_6, label %Label_or_4

Label_and_6:
	br i1 %t19,label %Label_stmt_4, label %Label_or_4

Label_or_4:
	br label %Label_if_2_2

Label_stmt_4:
	%l13 = load i32, i32* %l2
	%t20 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %l13
	%l14 = load i32, i32* %l3
	store i32 %l14, i32* %t20
	br label %Label_if_1_3

Label_if_1_3:
	%l15 = load i32, i32* %l2
	%l16 = add i32 %l15, 0
	%t21 = load i32, i32* @n
	%l17 = add i32 %t21, 0
	%t22 = icmp eq i32 %l16, %l17
	br i1 %t22,label %Label_and_7, label %Label_or_5

Label_and_7:
	br i1 %t22,label %Label_stmt_5, label %Label_or_5

Label_or_5:
	br label %Label_if_2_3

Label_stmt_5:
	call void @printans()
	br label %Label_cond_3

Label_if_2_3:
	br label %Label_cond_3

Label_cond_3:
	%l18 = load i32, i32* %l3
	%t23 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %l18
	store i32 1, i32* %t23
	%t24 = load i32, i32* %l2
	%t25 = load i32, i32* %l3
	%t26 = add i32 %t24, %t25
	%t27 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %t26
	store i32 1, i32* %t27
	%t28 = load i32, i32* @n
	%t29 = load i32, i32* %l2
	%t30 = add i32 %t28, %t29
	%t31 = load i32, i32* %l3
	%t32 = sub i32 %t30, %t31
	%t33 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %t32
	store i32 1, i32* %t33
	%t34 = load i32, i32* %l2
	%t35 = add i32 %t34, 1
	call void @f(i32 %t35)
	%l19 = load i32, i32* %l3
	%t36 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %l19
	store i32 0, i32* %t36
	%t37 = load i32, i32* %l2
	%t38 = load i32, i32* %l3
	%t39 = add i32 %t37, %t38
	%t40 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %t39
	store i32 0, i32* %t40
	%t41 = load i32, i32* @n
	%t42 = load i32, i32* %l2
	%t43 = add i32 %t41, %t42
	%t44 = load i32, i32* %l3
	%t45 = sub i32 %t43, %t44
	%t46 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %t45
	store i32 0, i32* %t46
	br label %Label_cond_2

Label_if_2_2:
	br label %Label_cond_2

Label_cond_2:
	%t47 = load i32, i32* %l3
	%t48 = add i32 %t47, 1
	store i32 %t48, i32* %l3
	br label %Label_while_2

Label_whileEnd_2:
	ret void
}
define dso_local i32@main() {
	%l1 = alloca i32
	%t1 = call i32 @getint()
	store i32 %t1, i32* %l1
	br label %Label_while_3

Label_while_3:
	%l2 = load i32, i32* %l1
	%l3 = add i32 %l2, 0
	%l4 = add i32 0, 0
	%t2 = icmp sgt i32 %l3, %l4
	br i1 %t2,label %Label_and_8, label %Label_or_6

Label_and_8:
	br i1 %t2,label %Label_stmt_6, label %Label_or_6

Label_or_6:
	br label %Label_whileEnd_3

Label_stmt_6:
	%t3 = call i32 @getint()
	store i32 %t3, i32* @n
	call void @f(i32 1)
	%t4 = load i32, i32* %l1
	%t5 = sub i32 %t4, 1
	store i32 %t5, i32* %l1
	br label %Label_while_3

Label_whileEnd_3:
	ret i32 0
	ret i32 0
}